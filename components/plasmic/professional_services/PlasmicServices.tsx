// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: psCXYX3gjakvq2zZg1EteZ
// Component: Uj1y_vU3C_U3

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: g3ZffYhwzf2j/component
import ServicesWhite from "../../ServicesWhite"; // plasmic-import: mrVNwq8TsTG6/component
import Footer from "../../Footer"; // plasmic-import: LTw2TEFnvRb-/component

import { useScreenVariants as useScreenVariantshvhwDwBsRjsA } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: HvhwDwBSRjsA/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: psCXYX3gjakvq2zZg1EteZ/projectcss
import sty from "./PlasmicServices.module.css"; // plasmic-import: Uj1y_vU3C_U3/css

import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: FOKW3QCJJPl6/icon

createPlasmicElementProxy;

export type PlasmicServices__VariantMembers = {};
export type PlasmicServices__VariantsArgs = {};
type VariantPropType = keyof PlasmicServices__VariantsArgs;
export const PlasmicServices__VariantProps = new Array<VariantPropType>();

export type PlasmicServices__ArgsType = {};
type ArgPropType = keyof PlasmicServices__ArgsType;
export const PlasmicServices__ArgProps = new Array<ArgPropType>();

export type PlasmicServices__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  pageBanerSection?: Flex__<"div">;
  h1?: Flex__<"h1">;
  img?: Flex__<typeof PlasmicImg__>;
  text?: Flex__<"div">;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultServicesProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicServices__RenderFunc(props: {
  variants: PlasmicServices__VariantsArgs;
  args: PlasmicServices__ArgsType;
  overrides: PlasmicServices__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshvhwDwBsRjsA()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___7FjMk)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Services"}
              </h1>
            </div>
          </div>
          <section className={classNames(projectcss.all, sty.section___6OsnY)}>
            <div className={classNames(projectcss.all, sty.freeBox__cJsUs)}>
              <div className={classNames(projectcss.all, sty.freeBox___6LXq)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lzLux)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__fd3DS)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___7HVkv)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__nrGpz
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__a7Ymf
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___3Xue2)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__ubUey
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__uachw
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__nlIzI)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__p3CF
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__aBId7
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__xdXid)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite___5ZPev
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__vcQm3
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__nfWuX)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__bkNrf
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__qAOv
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__sywob)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite___7Wuts
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__dWZd
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__fl6I)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__r9WZp
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Why Choose Us"
                : "Our process"}
            </h2>
            <div className={classNames(projectcss.all, sty.freeBox__spVNa)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ziJaV)}
              >
                <div className={classNames(projectcss.all, sty.column__vWuk1)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite__bfRAh
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___36W7U
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__dlJ9N)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite___1VNnA
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__dd3Bd
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__wwamS)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite__cFelk
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___8I7T9
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__daxwm)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite__iiezs
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__tf8Lj
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__yaIpV)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite__drD0F
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__dPuNd
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__wK6Vj)}>
                  <ServicesWhite
                    className={classNames(
                      "__wab_instance",
                      sty.servicesWhite__lF0Ih
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__b79E
                        )}
                      >
                        {"Services main"}
                      </h3>
                    }
                  />
                </div>
              </Stack__>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__uvDbG)}>
            <div className={classNames(projectcss.all, sty.freeBox__hkLx)}>
              <div className={classNames(projectcss.all, sty.freeBox__zn460)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iOBl)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__xMhry)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__wp0IA)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__knBng
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__dndQe
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__yNmdn)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__vMjvb
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__ca8BI
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__k172Q)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__h5X1P
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__ofvir
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__r31Om)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite___191Wz
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__qMiU3
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__adAre)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__i0JEf
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__vTAs
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__sUw8B)}
                    >
                      <ServicesWhite
                        className={classNames(
                          "__wab_instance",
                          sty.servicesWhite__jZjqO
                        )}
                        slot={
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__a0215
                            )}
                          >
                            {"Services main"}
                          </h3>
                        }
                      />
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__nwV8H)}>
            <div className={classNames(projectcss.all, sty.freeBox___9Vl1V)}>
              <div className={classNames(projectcss.all, sty.freeBox__zTgCx)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__aa5RY)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__bHkuq)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__yGtLf)}
                    >
                      <PlasmicImg__
                        data-plasmic-name={"img"}
                        data-plasmic-override={overrides.img}
                        alt={""}
                        className={classNames(sty.img)}
                        displayHeight={"100%"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/professional_services/images/woman32879561920Jpg.jpg",
                          fullWidth: 1920,
                          fullHeight: 1280,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__b56Bt)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ebjGk
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__ipmx5
                          )}
                        >
                          {"Why Choose Us"}
                        </h2>
                        <div
                          data-plasmic-name={"text"}
                          data-plasmic-override={overrides.text}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                          }
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.columns__zgL8B
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column___7EhPp
                            )}
                          >
                            <ServicesWhite
                              className={classNames(
                                "__wab_instance",
                                sty.servicesWhite___0VQ95
                              )}
                              slot={
                                <h3
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h3,
                                    projectcss.__wab_text,
                                    sty.h3__rWiV
                                  )}
                                >
                                  {"Services main"}
                                </h3>
                              }
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__vD9Ei
                            )}
                          >
                            <ServicesWhite
                              className={classNames(
                                "__wab_instance",
                                sty.servicesWhite__uC3V
                              )}
                              slot={
                                <h3
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h3,
                                    projectcss.__wab_text,
                                    sty.h3__ybW5R
                                  )}
                                >
                                  {"Services main"}
                                </h3>
                              }
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column___5D8R
                            )}
                          >
                            <ServicesWhite
                              className={classNames(
                                "__wab_instance",
                                sty.servicesWhite__rqfUa
                              )}
                              slot={
                                <h3
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h3,
                                    projectcss.__wab_text,
                                    sty.h3__t4Ka4
                                  )}
                                >
                                  {"Services main"}
                                </h3>
                              }
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__odSs8
                            )}
                          >
                            <ServicesWhite
                              className={classNames(
                                "__wab_instance",
                                sty.servicesWhite__ytp0
                              )}
                              slot={
                                <h3
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h3,
                                    projectcss.__wab_text,
                                    sty.h3__nsoLy
                                  )}
                                >
                                  {"Services main"}
                                </h3>
                              }
                            />
                          </div>
                        </Stack__>
                      </Stack__>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "pageBanerSection", "h1", "img", "text", "footer"],
  header: ["header"],
  pageBanerSection: ["pageBanerSection", "h1"],
  h1: ["h1"],
  img: ["img"],
  text: ["text"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageBanerSection: "div";
  h1: "h1";
  img: typeof PlasmicImg__;
  text: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicServices__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicServices__VariantsArgs;
    args?: PlasmicServices__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicServices__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicServices__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicServices__ArgProps,
          internalVariantPropNames: PlasmicServices__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServices";
  } else {
    func.displayName = `PlasmicServices.${nodeName}`;
  }
  return func;
}

export const PlasmicServices = Object.assign(
  // Top-level PlasmicServices renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    h1: makeNodeComponent("h1"),
    img: makeNodeComponent("img"),
    text: makeNodeComponent("text"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicServices
    internalVariantProps: PlasmicServices__VariantProps,
    internalArgProps: PlasmicServices__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicServices;
/* prettier-ignore-end */
