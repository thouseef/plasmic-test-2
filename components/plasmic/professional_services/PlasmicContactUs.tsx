// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: psCXYX3gjakvq2zZg1EteZ
// Component: qbeeQNh78SE3

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: g3ZffYhwzf2j/component
import Button from "../../Button"; // plasmic-import: av16rnw7WHoz/component
import Footer from "../../Footer"; // plasmic-import: LTw2TEFnvRb-/component

import { useScreenVariants as useScreenVariantshvhwDwBsRjsA } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: HvhwDwBSRjsA/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: psCXYX3gjakvq2zZg1EteZ/projectcss
import sty from "./PlasmicContactUs.module.css"; // plasmic-import: qbeeQNh78SE3/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: wnkHQS1W30Ur/icon
import LoactionVectorSvgIcon from "./icons/PlasmicIcon__LoactionVectorSvg"; // plasmic-import: 4Zic9e6GveIO/icon
import PhoneVectorSvgIcon from "./icons/PlasmicIcon__PhoneVectorSvg"; // plasmic-import: TBAhtAcydZ6h/icon
import EmailVectorSvgIcon from "./icons/PlasmicIcon__EmailVectorSvg"; // plasmic-import: H0IW4QarVu26/icon

createPlasmicElementProxy;

export type PlasmicContactUs__VariantMembers = {};
export type PlasmicContactUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicContactUs__VariantsArgs;
export const PlasmicContactUs__VariantProps = new Array<VariantPropType>();

export type PlasmicContactUs__ArgsType = {};
type ArgPropType = keyof PlasmicContactUs__ArgsType;
export const PlasmicContactUs__ArgProps = new Array<ArgPropType>();

export type PlasmicContactUs__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  pageBanerSection?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  formContainer2?: Flex__<"div">;
  textarea?: Flex__<"textarea">;
  button?: Flex__<typeof Button>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultContactUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContactUs__RenderFunc(props: {
  variants: PlasmicContactUs__VariantsArgs;
  args: PlasmicContactUs__ArgsType;
  overrides: PlasmicContactUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshvhwDwBsRjsA()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__pbX3V)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__vCrXa
                )}
              >
                {"Contact Us"}
              </h1>
            </div>
          </div>
          <section className={classNames(projectcss.all, sty.section__boPfq)}>
            <div className={classNames(projectcss.all, sty.freeBox__qdS6)}>
              <div className={classNames(projectcss.all, sty.freeBox__l53Cy)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tw75M)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__ijad)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___94NPm)}
                    >
                      <PlasmicImg__
                        data-plasmic-name={"img"}
                        data-plasmic-override={overrides.img}
                        alt={""}
                        className={classNames(sty.img)}
                        displayHeight={"100%"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/professional_services/images/globeTrotter18280791920Jpg.jpg",
                          fullWidth: 1920,
                          fullHeight: 1280,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__nkhvr)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hPj04
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__azKyw
                          )}
                        >
                          {"Get In touch"}
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__z4Kci
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                          }
                        </div>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"formContainer2"}
                          data-plasmic-override={overrides.formContainer2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.formContainer2
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.columns__dwY1F
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__u5UOp
                              )}
                            >
                              <input
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textInput__hpPai
                                )}
                                placeholder={"First name"}
                                size={1}
                                type={"text"}
                                value={""}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__rhVvh
                              )}
                            >
                              <input
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textInput__wKzaG
                                )}
                                placeholder={"Last name"}
                                size={1}
                                type={"text"}
                                value={""}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__nm3QI
                              )}
                            >
                              <input
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textInput___8298J
                                )}
                                placeholder={"Email address"}
                                size={1}
                                type={"text"}
                                value={""}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__sVtqp
                              )}
                            >
                              <input
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textInput___6P21S
                                )}
                                placeholder={"Phone number"}
                                size={1}
                                type={"text"}
                                value={""}
                              />
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.columns__gtdXs
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__qHrsr
                              )}
                            >
                              <input
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textInput__qHicg
                                )}
                                placeholder={"Company"}
                                size={1}
                                type={"text"}
                                value={""}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__wcyvb
                              )}
                            >
                              <textarea
                                data-plasmic-name={"textarea"}
                                data-plasmic-override={overrides.textarea}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.textarea,
                                  sty.textarea
                                )}
                                placeholder={"Message"}
                                value={""}
                              />

                              <Button
                                data-plasmic-name={"button"}
                                data-plasmic-override={overrides.button}
                                className={classNames(
                                  "__wab_instance",
                                  sty.button
                                )}
                                color={"blackCoffee"}
                                submitsForm={true}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___1ZzP
                                  )}
                                >
                                  {"Send Message"}
                                </div>
                              </Button>
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__yWrM7)}>
            <div className={classNames(projectcss.all, sty.freeBox__lMbb)}>
              <div className={classNames(projectcss.all, sty.freeBox__uCnfw)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rYkeU)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__aSi5)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___7Fl4B)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__f8OnB
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wEmKj
                          )}
                        >
                          <LoactionVectorSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bch7T
                            )}
                            role={"img"}
                          />
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__u3XbT
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__qxUJx
                            )}
                          >
                            {"Address"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uw2Ib
                            )}
                          >
                            {"121 state lorem state"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___5GcV4)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Bh4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xbFxX
                          )}
                        >
                          <PhoneVectorSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kJQxw
                            )}
                            role={"img"}
                          />
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gqSbN
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__ySpe
                            )}
                          >
                            {"Phone"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bzyQ4
                            )}
                          >
                            {"888888885588"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___2KM0W)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vyjuz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xh2Kd
                          )}
                        >
                          <EmailVectorSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hBy87
                            )}
                            role={"img"}
                          />
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2DQ9P
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__wXgS
                            )}
                          >
                            {"Email"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wpAsn
                            )}
                          >
                            {"Info@gmail.com"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "img",
    "formContainer2",
    "textarea",
    "button",
    "footer"
  ],
  header: ["header"],
  pageBanerSection: ["pageBanerSection"],
  img: ["img"],
  formContainer2: ["formContainer2", "textarea", "button"],
  textarea: ["textarea"],
  button: ["button"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageBanerSection: "div";
  img: typeof PlasmicImg__;
  formContainer2: "div";
  textarea: "textarea";
  button: typeof Button;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicContactUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicContactUs__VariantsArgs;
    args?: PlasmicContactUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicContactUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicContactUs__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContactUs__ArgProps,
          internalVariantPropNames: PlasmicContactUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicContactUs";
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`;
  }
  return func;
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    img: makeNodeComponent("img"),
    formContainer2: makeNodeComponent("formContainer2"),
    textarea: makeNodeComponent("textarea"),
    button: makeNodeComponent("button"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContactUs;
/* prettier-ignore-end */
